/**
 * @file Firestore Security Rules
 * @core-philosophy This ruleset implements open read access and requires authentication for write operations to the /contactFormSubmissions collection.
 * @data-structure Data is stored in the root collection /contactFormSubmissions/{contactFormSubmissionId}.
 * @key-security-decisions
 *   - Read access to contact form submissions is public.
 *   - Only authenticated users can create, update, or delete contact form submissions.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read contact form submissions, but only authenticated users can create, update, or delete them.
     * @path /contactFormSubmissions/{contactFormSubmissionId}
     * @allow (get, list) - Any user can read the contact form submissions.
     * @allow (create) - An authenticated user can create a contact form submission.
     * @allow (update) - An authenticated user can update a contact form submission.
     * @allow (delete) - An authenticated user can delete a contact form submission.
     * @deny (create) - An unauthenticated user cannot create a contact form submission.
     * @deny (update) - An unauthenticated user cannot update a contact form submission.
     * @deny (delete) - An unauthenticated user cannot delete a contact form submission.
     * @principle Allows public read access, but restricts write access to authenticated users.
     */
    match /contactFormSubmissions/{contactFormSubmissionId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    // --- Helper functions ---
    function isSignedIn() {
      return request.auth != null;
    }
  }
}